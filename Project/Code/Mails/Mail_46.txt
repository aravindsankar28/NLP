
Dear all,=20


I will be giving my MS seminar on 30th August, 2013 (Friday) at 3:00 PM. Ki=
ndly make it convenient to attend the seminar and give your valuable sugges=
tions.=20


The details of the talk are as follows:=20


Speaker: Tushar Sharma (CS06S034)=20
Date : 30-08-2013, Friday=20
Time : 15:00 to 16:00=20
Topic : Design structures as a meta-abstraction for object-oriented softwar=
e development=20
Venue : BSB 361, Department of Computer Science & Engg.=20


Abstract:=20
Design patterns are community accepted solution to recurring design problem=
s for object-oriented software development. Patterns are employed during de=
sign, development, and maintenance phases of the software development life =
cycle. However, due to lack of proper abstractions, the usage of patterns i=
n each of these phases presents many challenges. For example, "pattern base=
d refactoring" used in the maintenance phase involves identification of can=
didate spots (for applicable design patterns) in a given implementation. Ac=
hieving this inference automatically is a non-trivial challenge. Similarly,=
 implementation of design patterns has problems such as lack of re-usabilit=
y, and implementation overhead. Even further, providing automated means to =
discover new design solutions is largely unexplored. Hence, proper abstract=
ions for defining and using design patterns as well as discovering new desi=
gn solutions are required to make software development life cycle easier an=
d flexible.=20


In this work, design structures are used as a meta-abstraction for object-o=
riented software systems. Design structures capture key interactions of an =
object-oriented software system and offer a finer-level abstraction than de=
sign patterns. The work proposes a new abstraction namely Refactoring Patte=
rn (ReP) graph derived from design structures; the ReP graph abstracts the =
source code information and exposes them in terms of fundamental constructs=
. A framework has been developed to infer design patterns in a given source=
 code using such constructs. Design structures can also help a developer to=
 overcome problems associated with implementation of design patterns as the=
y form the basis for pattern expressions and pattern formation grammar. A s=
ource code generation framework for design patterns has been proposed using=
 pattern expressions and pattern formation grammar. In addition, the propos=
ed pattern formation grammar based method offers an automated mean to help =
software designers by discovering new design solutions. Further, the work p=
roposes a pattern language description language (XPLDL) based on design str=
uctures to specify grammar of pattern languages explicitly.=20


All are welcome.=20


thanks and regards,=20
-Tushar Sharma=20

