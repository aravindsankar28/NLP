
Hello All, 


I will be giving my MS seminar talk on 03rd April, 2013 (Wednesday) at 3.00 PM. I request you to kindly attend and give your valuable suggestions. The details of the seminar are as follows: 




Speaker: Geeta Iyer 
Venue: BSB 361 (Seminar Hall), Dept. of CSE 
Date: 03rd April, 2013 (Wednesday) 
Time: 3:00 PM 
Topic: Generate-Map-Reduce: An Extension to Map-Reduce to Support Shared Data and Recursive Computations 




Abstract 


It is difficult to express the parallelism present in complex computations using existing higher level abstractions such as MapReduce and Dryad. These computations include applications from wide variety of domains, like Artificial Intelligence, Decision Tree Algorithms, Association Rule Mining, Recommender Systems, Graph Algorithms, Clustering Algorithms , Compute Intensive Scientific Workflows, Optimization Algorithms, etc. Their execution graphs introduce new challenges in terms of programmer expressibility and runtime performance such as iterative and recursive computations, handling dynamically generated data, providing shared communication model, etc. 

We propose an extension to MapReduce, called Generate-Map-Reduce (GMR), targeted towards modeling these applications. GMR introduces a new Generate abstraction into the MapReduce framework that captures recursive computations. GMR features a light-weight runtime that supports iterative and recursive computations efficiently. In addition, the runtime also provides a distributed in-memory shared data structure support. This shared data structure can be instantiated to different types based on application-specific requirements. Due to similar abstractions as MapReduce, it provides an easy switchover for existing MapReduce programmers. GMR supports various refinements to handle different degrees of computation and communication requirements of the tasks. 


We illustrate recursive computations with GMR by modeling complex applications like simulated annealing, A* search, adaptive quadrature computation that require recursive spawning of new tasks to handle variable degree of parallelism. GMR runtime supports caching of common data across iterations in memory and local disks. We illustrate how this caching helps in achieving significant speedup for iterative computations by modeling kmeans clustering. 




-- 
Thanks, 
Geeta Iyer, 
MS Scholar, DOS Lab, 
Dept of CSE, 
IIT Madras 

