Dear All,
     I invite you to my MS seminar on 6th June 2014 (Friday) at 3:00 PM.
Kindly make it convenient to attend the seminar. The details of the seminar
are as follows.

*Title :* Handling Skew in MapReduce Applications.
*Speaker :* Prateek Dhawalia(CS11S020)
*Time :* 06-06-2014 (Friday) at 3:00 PM
*Venue :* BSB 361, Seminar Hall, Department of Computer Science and
Engineering

*Abstract:*

Web, scientific research and surveys, businesses are generating huge
volumes of data. Users are leveraging the power of advanced technologies
and sensors to collect data at an unprecedented rate. The voluminous amount
of data being generated is also termed as Big Data and its study is not
restricted to any particular field. Analyzing such data gives meaningful
insights and exposes the hidden co-relation among data to promote business,
solve scientific mysteries and much more. Researchers and industry are
continuously striving to develop tools to process such huge volumes of data
generated. Tools like parallel DBMS=E2=80=99s and MapReduce have been popul=
arly
used for processing big data. This work focuses on handling skew in
MapReduce applications by making MapReduce frameworks detect skew
dynamically in the system. Skew occurs in a MapReduce job when there is
significant variance in the execution times of the parallel tasks in a job.
Completing all the tasks at the same time is important for the completion
of the entire job. One slow running task delays the completion of the
entire job. Resource utilization also decreases because only a few slow
running tasks utilize the cluster in the presence of skew. This extremely
diminishes the performance achievable by parallel programming frameworks
like MapReduce and the main objective of using such frameworks is defeated.
This work emphasizes on dynamically handling skew in the system. It
proposes and implements two approaches i.e Chisel and Chisel++, to handle
skew in the parallel tasks of a job. Chisel deals in dynamically handling
computation skew in map tasks and data skew in reduce tasks. It also
modifies the job scheduler to improve the completion time of jobs. It is
provisioned to dynamically decide the point at which the reduce tasks
should start so that the pipelining between the map and reduce phase
is maximized. Chisel++ is an extension to Chisel and focuses only on
alleviating the disadvantages of Chisel when handling data skew in reduce
tasks. It incorporates an efficient range-partitioning technique to achieve
better performance.
--=20
*--- ALL ARE WELCOME ---*






*regardsPrateek DhawaliaMS ScholarDOS LabIIT, Chennai*
